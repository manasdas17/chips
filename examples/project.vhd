--+============================================================================+
--|   **THIS FILE WAS AUTOMATICALLY GENERATED BY THE PYTHON STREAMS LIBRARY**  |
--+ ============================================================================+
--|                    _       ________________                                |
--|                   (_)---->/                /     _                         |
--|                    _     / PYTHON STREAMS /---->(_)                        |
--|                   (_)-->/________________/                                 |
--|                                                                            |
--+============================================================================+

-- generated by python streams library
-- date generated  : UTC 2011-03-26 17:19:33
-- platform        : linux2
-- python version  : 2.6.6 (r266:84292, Sep 15 2010, 16:22:56) 
--                   [GCC 4.4.5]
-- streams version : 0.1

--+============================================================================+
--|                             **END OF HEADER**                              |
--+============================================================================+

--                                   ***                                       

--+============================================================================+
--|                    **START OF EXTERNAL DEPENDENCIES**                      |
--+============================================================================+


--  ****************************************************************************
--  Filename         :
--  Project          :
--  Version          :0.1
--  Author           :Jonathan P Dawson
--  Created Date     :2005-12-18
--  ****************************************************************************
--  Description      :A RAM based on Xilinx block RAMs
--  ****************************************************************************
--  Dependencies     :Standard Libraries
--  ****************************************************************************
--  Revision History :
--  
--  Date :2005-12-18
--  Author :Jonathan P Dawson
--  Modification: Created File
--  
--  ****************************************************************************
--  Copyright (C) Jonathan P Dawson 2005
--  ****************************************************************************
 library ieee;
 use ieee.std_logic_1164.all;
 use ieee.numeric_std.all;

 entity RAMARRAY is
    generic(
        DEPTH : integer;
        WIDTH : integer
    );
    port(
        CLK             : in  std_logic;
        RST             : in  std_logic;
        ADDRESS_IN      : in  std_logic_vector;
        ADDRESS_IN_STB  : in  std_logic;
        ADDRESS_IN_ACK  : out std_logic;
        DATA_IN         : in  std_logic_vector;
        DATA_IN_STB     : in  std_logic;
        DATA_IN_ACK     : out std_logic;
        ADDRESS_OUT     : in  std_logic_vector;
        ADDRESS_OUT_STB : in  std_logic;
        ADDRESS_OUT_ACK : out std_logic;
        DATA_OUT        : out std_logic_vector;
        DATA_OUT_STB    : out std_logic;
        DATA_OUT_ACK    : in  std_logic
    );
  end entity RAMARRAY;

  architecture RTL of RAMARRAY is

    type MEMORY_TYPE is array (0 to DEPTH-1) of std_logic_vector(WIDTH-1 downto 0);
    shared variable MEMORY : MEMORY_TYPE;

    type IN_STATE_TYPE is (READ_IN_ADDRESS, ACK_IN_ADDRESS, READ_IN_DATA, ACK_IN_DATA);
    signal IN_STATE : IN_STATE_TYPE;

    type OUT_STATE_TYPE is (READ_OUT_ADDRESS, ACK_OUT_ADDRESS, WRITE_OUT_DATA);
    signal OUT_STATE : OUT_STATE_TYPE;

  begin

     process
      variable ADDRESS : integer range 0 to DEPTH-1;
    begin
      wait until rising_edge(CLK);
      case IN_STATE is

        when READ_IN_ADDRESS =>
           if ADDRESS_IN_STB = '1' then
               ADDRESS := to_integer(unsigned(ADDRESS_IN));
               ADDRESS_IN_ACK <= '1';
               IN_STATE <= ACK_IN_ADDRESS;
           end if;

        when ACK_IN_ADDRESS =>
           ADDRESS_IN_ACK <= '0';
           IN_STATE <= READ_IN_DATA;

        when READ_IN_DATA =>
           if DATA_IN_STB = '1' then
               MEMORY(ADDRESS) := DATA_IN;
               DATA_IN_ACK <= '1';
               IN_STATE <= ACK_IN_DATA;
           end if;

        when ACK_IN_DATA =>
           DATA_IN_ACK <= '0';
           IN_STATE <= READ_IN_ADDRESS;

        when others => IN_STATE <= READ_IN_ADDRESS;

      end case;
      if RST = '1' then
        DATA_IN_ACK <= '0';
        ADDRESS_IN_ACK <= '0';
        IN_STATE <= READ_IN_ADDRESS;
      end if;
    end process;

    process
       variable ADDRESS : integer range 0 to DEPTH-1;
    begin
      wait until rising_edge(CLK);
      case OUT_STATE is

        when READ_OUT_ADDRESS =>
           if ADDRESS_OUT_STB = '1' then
             ADDRESS := to_integer(unsigned(ADDRESS_OUT));
             ADDRESS_OUT_ACK <= '1';
             OUT_STATE <= ACK_OUT_ADDRESS;
           end if;

        when ACK_OUT_ADDRESS =>
           ADDRESS_OUT_ACK <= '0';
           OUT_STATE <= WRITE_OUT_DATA;

        when WRITE_OUT_DATA =>
           DATA_OUT <= MEMORY(ADDRESS);
           DATA_OUT_STB <= '1';
           if DATA_OUT_ACK = '1' then
             DATA_OUT_STB <= '0';
             OUT_STATE <= READ_OUT_ADDRESS;
           end if;

        when others => OUT_STATE <= READ_OUT_ADDRESS;

      end case;
      if RST = '1' then
        DATA_OUT_STB <= '0';
        ADDRESS_OUT_ACK <= '0';
        OUT_STATE <= READ_OUT_ADDRESS;
      end if;
  end process;

end RTL;
--  ****************************************************************************
--  End of RAM
--  ****************************************************************************

--+============================================================================+
--|                     **END OF EXTERNAL DEPENDENCIES**                       |
--+============================================================================+

--                                   ***                                       

--+============================================================================+
--|                     **START OF AUTO GENERATED CODE**                       |
--+============================================================================+

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use std.textio.all;

entity STREAMS_VHDL_MODEL is

end entity STREAMS_VHDL_MODEL;

architecture RTL of STREAMS_VHDL_MODEL is


  --returns the greater of the two parameters
  function MAX(
    A : integer;
    B : integer) return integer is
  begin
    if A > B then
      return A;
    else
      return B;
    end if;
  end MAX;

  --returns a std_logic_vector sum of the two parameters
  function ADD(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), MAX(A'length, B'length) + 1) + 
      resize(signed(B), MAX(A'length, B'length) + 1));
    end ADD;

  --returns a std_logic_vector product of the two parameters
  function MUL(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      signed(A) *
      signed(B));
    end MUL;

  --returns a std_logic_vector difference of the two parameters
  function SUB(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), MAX(A'length, B'length) + 1) - 
      resize(signed(B), MAX(A'length, B'length) + 1));
  end SUB;

  --returns A shifted right (arithmetic) by A
  function SR(
    A  : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(shift_right(signed(A), to_integer(signed(B))));
  end SR;

  --returns A shifted left by B
  function SL(
    A  : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(shift_left(signed(A), to_integer(signed(B))));
  end SL;

  --returns bitwise and of A and B
  --(A and B are resized to the length of the larger first)
  function BAND(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) and
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)));
  end BAND;

  --returns bitwise or of A and B
  --(A and B are resized to the length of the larger first)
  function BOR(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) or
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)));
  end BOR;

  --returns bitwise xor of A and B
  --(A and B are resized to the length of the larger first)
  function BXOR(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) xor
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)));
  end BXOR;

  --equality comparison of A and B
  --(A and B are resized to the length of the larger first)
  function EQ(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) =
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end EQ;

  --inequality comparison of A and B
  --(A and B are resized to the length of the larger first)
  function NE(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
    resize(signed(A), MAX(A'LENGTH, B'LENGTH)) /=
    resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end NE;

  --greater than comparison of A and B
  --(A and B are resized to the length of the larger first)
  function GT(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) >
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end GT;

  --greater than or equal comparison of A and B
  --(A and B are resized to the length of the larger first)
  function GE(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) >=
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end GE;

  --less than comparison of A and B
  --(A and B are resized to the length of the larger first)
  function LT(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) <
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end LT;

  --less than or equal comparison of A and B
  --(A and B are resized to the length of the larger first)
  function LE(
    A : std_logic_vector; 
    B : std_logic_vector) return std_logic_vector is
  begin
    if 
      resize(signed(A), MAX(A'LENGTH, B'LENGTH)) <=
      resize(signed(B), MAX(A'LENGTH, B'LENGTH)) then
      return "1";
    else
      return "0";
    end if;
  end LE;

  --resize A to B bits
  function STD_RESIZE(
    A : std_logic_vector; 
    B : integer) return std_logic_vector is
  begin
    return std_logic_vector(
      resize(signed(A), B));
  end STD_RESIZE;

  type BINARY_STATE_TYPE is (BINARY_INPUT, BINARY_OUTPUT);
  type UNARY_STATE_TYPE is (UNARY_INPUT, UNARY_OUTPUT);
  type TEE_STATE_TYPE is (TEE_INPUT_A, TEE_WAIT_YZ, TEE_WAIT_Y, TEE_WAIT_Z);
  type DIVIDER_STATE_TYPE is (READ_A_B, DIVIDE_1, DIVIDE_2, WRITE_Z);
  type SERIAL_IN_STATE_TYPE is (IDLE, START, RX0, RX1, RX2, RX3, RX4, RX5, RX6, RX7, STOP, OUTPUT_DATA);
  type SERIAL_OUT_STATE_TYPE is (IDLE, START, WAIT_EN, TX0, TX1, TX2, TX3, TX4, TX5, TX6, TX7, STOP);
  type PRINTER_STATE_TYPE is (INPUT_A, SHIFT, OUTPUT_SIGN, OUTPUT_Z, OUTPUT_NL);
  type HEX_PRINTER_STATE_TYPE is (INPUT_A, OUTPUT_SIGN, OUTPUT_DIGITS);

  constant TIMER_1us_MAX : integer := 49;
  signal TIMER_1us_COUNT : integer range 0 to TIMER_1us_MAX;
  signal TIMER_1us : std_logic;
  constant TIMER_10us_MAX : integer := 49;
  signal TIMER_10us_COUNT : integer range 0 to TIMER_1us_MAX;
  signal TIMER_10us : std_logic;
  constant TIMER_100us_MAX : integer := 49;
  signal TIMER_100us_COUNT : integer range 0 to TIMER_1us_MAX;
  signal TIMER_100us : std_logic;
  constant TIMER_1ms_MAX : integer := 49;
  signal TIMER_1ms_COUNT : integer range 0 to TIMER_1us_MAX;
  signal TIMER_1ms : std_logic;

  signal CLK : std_logic;
  signal RST : std_logic;
  signal STREAM_1     : std_logic_vector(13 downto 0);
  signal STREAM_1_STB : std_logic;
  signal STREAM_1_ACK : std_logic;
  signal STATE_1 : UNARY_STATE_TYPE;
  type LOOKUP_1_TYPE is array (0 to 255) of std_logic_vector(13 downto 0);
  signal LOOKUP_1 : LOOKUP_1_TYPE := (
0 => "01000000000000",
1 => "00000000000000",
2 => "00111111101100",
3 => "00000000000000",
4 => "00111110110001",
5 => "00000000000000",
6 => "00111101010000",
7 => "00000000000000",
8 => "00111011001000",
9 => "00000000000000",
10 => "00111000011100",
11 => "00000000000000",
12 => "00110101001110",
13 => "00000000000000",
14 => "00110001011110",
15 => "00000000000000",
16 => "00101101010000",
17 => "00000000000000",
18 => "00101000100110",
19 => "00000000000000",
20 => "00100011100100",
21 => "00000000000000",
22 => "00011110001011",
23 => "00000000000000",
24 => "00011000011111",
25 => "00000000000000",
26 => "00010010100101",
27 => "00000000000000",
28 => "00001100011111",
29 => "00000000000000",
30 => "00000110010001",
31 => "00000000000000",
32 => "00000000000000",
33 => "00000000000000",
34 => "11111001101111",
35 => "00000000000000",
36 => "11110011100001",
37 => "00000000000000",
38 => "11101101011011",
39 => "00000000000000",
40 => "11100111100001",
41 => "00000000000000",
42 => "11100001110101",
43 => "00000000000000",
44 => "11011100011100",
45 => "00000000000000",
46 => "11010111011010",
47 => "00000000000000",
48 => "11010010110000",
49 => "00000000000000",
50 => "11001110100010",
51 => "00000000000000",
52 => "11001010110010",
53 => "00000000000000",
54 => "11000111100100",
55 => "00000000000000",
56 => "11000100111000",
57 => "00000000000000",
58 => "11000010110000",
59 => "00000000000000",
60 => "11000001001111",
61 => "00000000000000",
62 => "11000000010100",
63 => "00000000000000",
64 => "11000000000000",
65 => "00000000000000",
66 => "11000000010100",
67 => "00000000000000",
68 => "11000001001111",
69 => "00000000000000",
70 => "11000010110000",
71 => "00000000000000",
72 => "11000100111000",
73 => "00000000000000",
74 => "11000111100100",
75 => "00000000000000",
76 => "11001010110010",
77 => "00000000000000",
78 => "11001110100010",
79 => "00000000000000",
80 => "11010010110000",
81 => "00000000000000",
82 => "11010111011010",
83 => "00000000000000",
84 => "11011100011100",
85 => "00000000000000",
86 => "11100001110101",
87 => "00000000000000",
88 => "11100111100001",
89 => "00000000000000",
90 => "11101101011011",
91 => "00000000000000",
92 => "11110011100001",
93 => "00000000000000",
94 => "11111001101111",
95 => "00000000000000",
96 => "00000000000000",
97 => "00000000000000",
98 => "00000110010001",
99 => "00000000000000",
100 => "00001100011111",
101 => "00000000000000",
102 => "00010010100101",
103 => "00000000000000",
104 => "00011000011111",
105 => "00000000000000",
106 => "00011110001011",
107 => "00000000000000",
108 => "00100011100100",
109 => "00000000000000",
110 => "00101000100110",
111 => "00000000000000",
112 => "00101101010000",
113 => "00000000000000",
114 => "00110001011110",
115 => "00000000000000",
116 => "00110101001110",
117 => "00000000000000",
118 => "00111000011100",
119 => "00000000000000",
120 => "00111011001000",
121 => "00000000000000",
122 => "00111101010000",
123 => "00000000000000",
124 => "00111110110001",
125 => "00000000000000",
126 => "00111111101100",
127 => "00000000000000",
128 => "00000000000000",
129 => "00000000000000",
130 => "00000000000000",
131 => "00000000000000",
132 => "00000000000000",
133 => "00000000000000",
134 => "00000000000000",
135 => "00000000000000",
136 => "00000000000000",
137 => "00000000000000",
138 => "00000000000000",
139 => "00000000000000",
140 => "00000000000000",
141 => "00000000000000",
142 => "00000000000000",
143 => "00000000000000",
144 => "00000000000000",
145 => "00000000000000",
146 => "00000000000000",
147 => "00000000000000",
148 => "00000000000000",
149 => "00000000000000",
150 => "00000000000000",
151 => "00000000000000",
152 => "00000000000000",
153 => "00000000000000",
154 => "00000000000000",
155 => "00000000000000",
156 => "00000000000000",
157 => "00000000000000",
158 => "00000000000000",
159 => "00000000000000",
160 => "00000000000000",
161 => "00000000000000",
162 => "00000000000000",
163 => "00000000000000",
164 => "00000000000000",
165 => "00000000000000",
166 => "00000000000000",
167 => "00000000000000",
168 => "00000000000000",
169 => "00000000000000",
170 => "00000000000000",
171 => "00000000000000",
172 => "00000000000000",
173 => "00000000000000",
174 => "00000000000000",
175 => "00000000000000",
176 => "00000000000000",
177 => "00000000000000",
178 => "00000000000000",
179 => "00000000000000",
180 => "00000000000000",
181 => "00000000000000",
182 => "00000000000000",
183 => "00000000000000",
184 => "00000000000000",
185 => "00000000000000",
186 => "00000000000000",
187 => "00000000000000",
188 => "00000000000000",
189 => "00000000000000",
190 => "00000000000000",
191 => "00000000000000",
192 => "00000000000000",
193 => "00000000000000",
194 => "00000000000000",
195 => "00000000000000",
196 => "00000000000000",
197 => "00000000000000",
198 => "00000000000000",
199 => "00000000000000",
200 => "00000000000000",
201 => "00000000000000",
202 => "00000000000000",
203 => "00000000000000",
204 => "00000000000000",
205 => "00000000000000",
206 => "00000000000000",
207 => "00000000000000",
208 => "00000000000000",
209 => "00000000000000",
210 => "00000000000000",
211 => "00000000000000",
212 => "00000000000000",
213 => "00000000000000",
214 => "00000000000000",
215 => "00000000000000",
216 => "00000000000000",
217 => "00000000000000",
218 => "00000000000000",
219 => "00000000000000",
220 => "00000000000000",
221 => "00000000000000",
222 => "00000000000000",
223 => "00000000000000",
224 => "00000000000000",
225 => "00000000000000",
226 => "00000000000000",
227 => "00000000000000",
228 => "00000000000000",
229 => "00000000000000",
230 => "00000000000000",
231 => "00000000000000",
232 => "00000000000000",
233 => "00000000000000",
234 => "00000000000000",
235 => "00000000000000",
236 => "00000000000000",
237 => "00000000000000",
238 => "00000000000000",
239 => "00000000000000",
240 => "00000000000000",
241 => "00000000000000",
242 => "00000000000000",
243 => "00000000000000",
244 => "00000000000000",
245 => "00000000000000",
246 => "00000000000000",
247 => "00000000000000",
248 => "00000000000000",
249 => "00000000000000",
250 => "00000000000000",
251 => "00000000000000",
252 => "00000000000000",
253 => "00000000000000",
254 => "00000000000000",
255 => "00000000000000"
  );

  signal STREAM_0     : std_logic_vector(8 downto 0);
  signal STREAM_0_STB : std_logic;
  signal STREAM_0_ACK : std_logic;

  component RAMARRAY is
    generic(
        DEPTH : integer;
        WIDTH : integer
    );
    port(
        CLK             : in  std_logic;
        RST             : in  std_logic;
        ADDRESS_IN      : in  std_logic_vector;
        ADDRESS_IN_STB  : in  std_logic;
        ADDRESS_IN_ACK  : out std_logic;
        DATA_IN         : in  std_logic_vector;
        DATA_IN_STB     : in  std_logic;
        DATA_IN_ACK     : out std_logic;
        ADDRESS_OUT     : in  std_logic_vector;
        ADDRESS_OUT_STB : in  std_logic;
        ADDRESS_OUT_ACK : out std_logic;
        DATA_OUT        : out std_logic_vector;
        DATA_OUT_STB    : out std_logic;
        DATA_OUT_ACK    : in  std_logic
    );
  end component RAMARRAY;

  signal STREAM_5     : std_logic_vector(29 downto 0);
  signal STREAM_5_STB : std_logic;
  signal STREAM_5_ACK : std_logic;

  signal STREAM_9     : std_logic_vector(29 downto 0);
  signal STREAM_9_STB : std_logic;
  signal STREAM_9_ACK : std_logic;

  signal STREAM_11     : std_logic_vector(12 downto 0);
  signal STREAM_11_STB : std_logic;
  signal STREAM_11_ACK : std_logic;
  signal STATE_11 : UNARY_STATE_TYPE;
  type LOOKUP_11_TYPE is array (0 to 6) of std_logic_vector(12 downto 0);
  signal LOOKUP_11 : LOOKUP_11_TYPE := (
0 => "1000000000000",
1 => "0000000000000",
2 => "0101101010000",
3 => "0111011001000",
4 => "0111110110001",
5 => "0111111101100",
6 => "0111111111011"
  );

  signal STREAM_10     : std_logic_vector(3 downto 0);
  signal STREAM_10_STB : std_logic;
  signal STREAM_10_ACK : std_logic;

  signal STREAM_13     : std_logic_vector(12 downto 0);
  signal STREAM_13_STB : std_logic;
  signal STREAM_13_ACK : std_logic;
  signal STATE_13 : UNARY_STATE_TYPE;
  type LOOKUP_13_TYPE is array (0 to 6) of std_logic_vector(12 downto 0);
  signal LOOKUP_13 : LOOKUP_13_TYPE := (
0 => "0000000000000",
1 => "1000000000000",
2 => "1010010110000",
3 => "1100111100001",
4 => "1110011100001",
5 => "1111001101111",
6 => "1111100110111"
  );

  signal STREAM_12     : std_logic_vector(3 downto 0);
  signal STREAM_12_STB : std_logic;
  signal STREAM_12_ACK : std_logic;

  signal STREAM_2       : std_logic_vector(29 downto 0);
  signal STREAM_2_STB   : std_logic;
  signal STREAM_2_ACK   : std_logic;
  signal STREAM_3       : std_logic_vector(29 downto 0);
  signal STREAM_3_STB   : std_logic;
  signal STREAM_3_ACK   : std_logic;
  signal STREAM_6       : std_logic_vector(29 downto 0);
  signal STREAM_6_STB   : std_logic;
  signal STREAM_6_ACK   : std_logic;
  signal STREAM_7       : std_logic_vector(29 downto 0);
  signal STREAM_7_STB   : std_logic;
  signal STREAM_7_ACK   : std_logic;
  signal STREAM_4       : std_logic_vector(29 downto 0);
  signal STREAM_4_STB   : std_logic;
  signal STREAM_4_ACK   : std_logic;
  signal STREAM_8       : std_logic_vector(29 downto 0);
  signal STREAM_8_STB   : std_logic;
  signal STREAM_8_ACK   : std_logic;
  signal STREAM_14       : std_logic_vector(29 downto 0);
  signal STREAM_14_STB   : std_logic;
  signal STREAM_14_ACK   : std_logic;
  signal STREAM_15       : std_logic_vector(29 downto 0);
  signal STREAM_15_STB   : std_logic;
  signal STREAM_15_ACK   : std_logic;
  constant OP_IMM_16 : std_logic_vector(4 downto 0) := "00000";
  constant OP_MOVE_16 : std_logic_vector(4 downto 0) := "00001";
  constant OP_GT_16 : std_logic_vector(4 downto 0) := "00010";
  constant OP_EQ_16 : std_logic_vector(4 downto 0) := "00011";
  constant OP_JMPF_16 : std_logic_vector(4 downto 0) := "00100";
  constant OP_JMP_16 : std_logic_vector(4 downto 0) := "00101";
  constant OP_ADD_16 : std_logic_vector(4 downto 0) := "00110";
  constant OP_GE_16 : std_logic_vector(4 downto 0) := "00111";
  constant OP_SUB_16 : std_logic_vector(4 downto 0) := "01000";
  constant OP_SR_16 : std_logic_vector(4 downto 0) := "01001";
  constant OP_SL_16 : std_logic_vector(4 downto 0) := "01010";
  constant OP_MUL_16 : std_logic_vector(4 downto 0) := "01011";
  constant OP_READ_1_16 : std_logic_vector(4 downto 0) := "01100";
  constant OP_READ_5_16 : std_logic_vector(4 downto 0) := "01101";
  constant OP_READ_9_16 : std_logic_vector(4 downto 0) := "01110";
  constant OP_READ_11_16 : std_logic_vector(4 downto 0) := "01111";
  constant OP_READ_13_16 : std_logic_vector(4 downto 0) := "10000";
  constant OP_WRITE_2_16 : std_logic_vector(4 downto 0) := "10001";
  constant OP_WRITE_3_16 : std_logic_vector(4 downto 0) := "10010";
  constant OP_WRITE_6_16 : std_logic_vector(4 downto 0) := "10011";
  constant OP_WRITE_7_16 : std_logic_vector(4 downto 0) := "10100";
  constant OP_WRITE_4_16 : std_logic_vector(4 downto 0) := "10101";
  constant OP_WRITE_8_16 : std_logic_vector(4 downto 0) := "10110";
  constant OP_WRITE_14_16 : std_logic_vector(4 downto 0) := "10111";
  constant OP_WRITE_15_16 : std_logic_vector(4 downto 0) := "11000";
  type PROCESS_16_STATE_TYPE is (STALL, EXECUTE, READ_STREAM_1, ACK_STREAM_1, READ_STREAM_5, ACK_STREAM_5, READ_STREAM_9, ACK_STREAM_9, READ_STREAM_11, ACK_STREAM_11, READ_STREAM_13, ACK_STREAM_13, WRITE_STREAM_2, WRITE_STREAM_3, WRITE_STREAM_6, WRITE_STREAM_7, WRITE_STREAM_4, WRITE_STREAM_8, WRITE_STREAM_14, WRITE_STREAM_15);
  type INSTRUCTIONS_TYPE_16  is array (0 to 356) of std_logic_vector(39 downto 0);
  type REGISTERS_TYPE_16     is array (0 to 31) of std_logic_vector(29 downto 0);
  signal STATE_16        : PROCESS_16_STATE_TYPE;
  signal REGISTERS_16    : REGISTERS_TYPE_16;
  signal PC_16           : unsigned(8 downto 0);
  signal OPERATION_16    : std_logic_vector(4 downto 0);
  signal SRCA_16         : std_logic_vector(4 downto 0);
  signal SRCB_16         : std_logic_vector(4 downto 0);
  signal IMMEDIATE_16    : std_logic_vector(29 downto 0);
  signal ZERO_16         : std_logic;
  signal A_16            : std_logic_vector(29 downto 0);
  signal B_16            : std_logic_vector(29 downto 0);
  signal QUOTIENT_16     : std_logic_vector(29 downto 0);
  signal SHIFTER_16      : std_logic_vector(29 downto 0);
  signal REMAINDER_16    : std_logic_vector(29 downto 0);
  signal COUNT_16        : integer range 0 to 30;
  signal SIGN_16         : std_logic;
  signal INSTRUCTIONS_16 : INSTRUCTIONS_TYPE_16 := (
0 => OP_IMM_16 & "00001" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 56
1 => OP_IMM_16 & "00010" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 58
2 => OP_IMM_16 & "00011" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 64
3 => OP_IMM_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
4 => OP_IMM_16 & "00101" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 65
5 => OP_IMM_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
6 => OP_IMM_16 & "00111" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 61
7 => OP_IMM_16 & "01000" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 60
8 => OP_IMM_16 & "01001" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 62
9 => OP_IMM_16 & "01010" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 63
10 => OP_IMM_16 & "01011" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 68
11 => OP_IMM_16 & "01100" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 69
12 => OP_IMM_16 & "01101" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 70
13 => OP_IMM_16 & "01110" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 71
14 => OP_IMM_16 & "01111" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 59
15 => OP_IMM_16 & "10000" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 57
16 => OP_IMM_16 & "10001" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 66
17 => OP_IMM_16 & "10010" & "000000000000000000000000000000", -- file: ./example_4_fft.py line: 67
18 => OP_IMM_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
19 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
20 => OP_IMM_16 & "10011" & "000000000000000000000010000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
21 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
22 => OP_GT_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 138
23 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
24 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
25 => OP_JMPF_16 & "10011" & "000000000000000000000000011100", -- file: None line: None
26 => OP_JMP_16 & "00000" & "000000000000000000000000101011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
27 => OP_JMP_16 & "00000" & "000000000000000000000000011100", -- file: None line: None
28 => OP_READ_1_16 & "00010" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
29 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
30 => OP_WRITE_2_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
31 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
32 => OP_WRITE_3_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
33 => OP_READ_1_16 & "00010" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
34 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
35 => OP_WRITE_6_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
36 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
37 => OP_WRITE_7_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
38 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
39 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
40 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
41 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
42 => OP_JMP_16 & "00000" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
43 => OP_IMM_16 & "10011" & "000000000000000000000001000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
44 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
45 => OP_IMM_16 & "10011" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
46 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
47 => OP_IMM_16 & "10011" & "000000000000000000000001111110", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
48 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
49 => OP_GE_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 139
50 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
51 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
52 => OP_JMPF_16 & "10011" & "000000000000000000000000110111", -- file: None line: None
53 => OP_JMP_16 & "00000" & "000000000000000000000010000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
54 => OP_JMP_16 & "00000" & "000000000000000000000000110111", -- file: None line: None
55 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
56 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
57 => OP_GT_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 138
58 => OP_JMPF_16 & "10011" & "000000000000000000000001101000", -- file: None line: None
59 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
60 => OP_WRITE_4_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
61 => OP_READ_5_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
62 => OP_MOVE_16 & "10011" & "000000000000000000000000000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
63 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
64 => OP_JMP_16 & "00000" & "000000000000000000000001000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
65 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
66 => OP_MOVE_16 & "00011" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
67 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
68 => OP_WRITE_8_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
69 => OP_READ_9_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
70 => OP_MOVE_16 & "10011" & "000000000000000000000000000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
71 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
72 => OP_JMP_16 & "00000" & "000000000000000000000001001001", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
73 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
74 => OP_MOVE_16 & "00101" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
75 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
76 => OP_WRITE_2_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
77 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
78 => OP_WRITE_4_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
79 => OP_READ_5_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
80 => OP_MOVE_16 & "10011" & "000000000000000000000000000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
81 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
82 => OP_JMP_16 & "00000" & "000000000000000000000001010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
83 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
84 => OP_WRITE_3_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
85 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
86 => OP_WRITE_6_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
87 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
88 => OP_WRITE_8_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
89 => OP_READ_9_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
90 => OP_MOVE_16 & "10011" & "000000000000000000000000000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
91 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
92 => OP_JMP_16 & "00000" & "000000000000000000000001011101", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
93 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
94 => OP_WRITE_7_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
95 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
96 => OP_WRITE_2_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
97 => OP_MOVE_16 & "10011" & "000000000000000000000000000011", -- file: ./example_4_fft.py line: 64
98 => OP_WRITE_3_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
99 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
100 => OP_WRITE_6_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
101 => OP_MOVE_16 & "10011" & "000000000000000000000000000101", -- file: ./example_4_fft.py line: 65
102 => OP_WRITE_7_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
103 => OP_JMP_16 & "00000" & "000000000000000000000001101000", -- file: None line: None
104 => OP_IMM_16 & "10011" & "000000000000000000000001000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
105 => OP_MOVE_16 & "00111" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
106 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
107 => OP_MOVE_16 & "10100" & "000000000000000000000000000111", -- file: ./example_4_fft.py line: 61
108 => OP_GE_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 139
109 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
110 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
111 => OP_JMPF_16 & "10011" & "000000000000000000000001110010", -- file: None line: None
112 => OP_JMP_16 & "00000" & "000000000000000000000001111011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
113 => OP_JMP_16 & "00000" & "000000000000000000000001110010", -- file: None line: None
114 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
115 => OP_MOVE_16 & "10100" & "000000000000000000000000000111", -- file: ./example_4_fft.py line: 61
116 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
117 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
118 => OP_MOVE_16 & "10011" & "000000000000000000000000000111", -- file: ./example_4_fft.py line: 61
119 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
120 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
121 => OP_MOVE_16 & "00111" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
122 => OP_JMP_16 & "00000" & "000000000000000000000001101010", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
123 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
124 => OP_MOVE_16 & "10100" & "000000000000000000000000000111", -- file: ./example_4_fft.py line: 61
125 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
126 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
127 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
128 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
129 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
130 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
131 => OP_JMP_16 & "00000" & "000000000000000000000000101111", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
132 => OP_IMM_16 & "10011" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
133 => OP_MOVE_16 & "01000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
134 => OP_IMM_16 & "10011" & "000000000000000000000000000111", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
135 => OP_MOVE_16 & "10100" & "000000000000000000000000001000", -- file: ./example_4_fft.py line: 60
136 => OP_GE_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 139
137 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
138 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
139 => OP_JMPF_16 & "10011" & "000000000000000000000010001110", -- file: None line: None
140 => OP_JMP_16 & "00000" & "000000000000000000000100110001", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
141 => OP_JMP_16 & "00000" & "000000000000000000000010001110", -- file: None line: None
142 => OP_IMM_16 & "10011" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
143 => OP_MOVE_16 & "10100" & "000000000000000000000000001000", -- file: ./example_4_fft.py line: 60
144 => OP_SL_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 149
145 => OP_MOVE_16 & "01001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
146 => OP_MOVE_16 & "10011" & "000000000000000000000000001001", -- file: ./example_4_fft.py line: 62
147 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
148 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
149 => OP_MOVE_16 & "01010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
150 => OP_IMM_16 & "10011" & "000000000000000001000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
151 => OP_MOVE_16 & "01011" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
152 => OP_IMM_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
153 => OP_MOVE_16 & "01100" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
154 => OP_READ_11_16 & "01101" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
155 => OP_READ_13_16 & "01110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
156 => OP_IMM_16 & "10011" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
157 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
158 => OP_MOVE_16 & "10011" & "000000000000000000000000001010", -- file: ./example_4_fft.py line: 63
159 => OP_MOVE_16 & "10100" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
160 => OP_GE_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 139
161 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
162 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
163 => OP_JMPF_16 & "10011" & "000000000000000000000010100110", -- file: None line: None
164 => OP_JMP_16 & "00000" & "000000000000000000000100101100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
165 => OP_JMP_16 & "00000" & "000000000000000000000010100110", -- file: None line: None
166 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
167 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
168 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
169 => OP_MOVE_16 & "01111" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
170 => OP_MOVE_16 & "10011" & "000000000000000000000000001111", -- file: ./example_4_fft.py line: 59
171 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
172 => OP_IMM_16 & "10011" & "000000000000000000000001111111", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
173 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
174 => OP_GE_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 139
175 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
176 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
177 => OP_JMPF_16 & "10011" & "000000000000000000000010110100", -- file: None line: None
178 => OP_JMP_16 & "00000" & "000000000000000000000100001101", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
179 => OP_JMP_16 & "00000" & "000000000000000000000010110100", -- file: None line: None
180 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
181 => OP_MOVE_16 & "10100" & "000000000000000000000000001010", -- file: ./example_4_fft.py line: 63
182 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
183 => OP_MOVE_16 & "10000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
184 => OP_MOVE_16 & "10011" & "000000000000000000000000010000", -- file: ./example_4_fft.py line: 57
185 => OP_WRITE_4_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
186 => OP_READ_5_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
187 => OP_MOVE_16 & "10011" & "000000000000000000000000000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
188 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
189 => OP_JMP_16 & "00000" & "000000000000000000000010111110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
190 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
191 => OP_MOVE_16 & "10001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
192 => OP_MOVE_16 & "10011" & "000000000000000000000000010000", -- file: ./example_4_fft.py line: 57
193 => OP_WRITE_8_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
194 => OP_READ_9_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
195 => OP_MOVE_16 & "10011" & "000000000000000000000000000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
196 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
197 => OP_JMP_16 & "00000" & "000000000000000000000011000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
198 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
199 => OP_MOVE_16 & "10010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
200 => OP_MOVE_16 & "10011" & "000000000000000000000000010001", -- file: ./example_4_fft.py line: 66
201 => OP_MOVE_16 & "10100" & "000000000000000000000000001011", -- file: ./example_4_fft.py line: 68
202 => OP_MUL_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
203 => OP_IMM_16 & "10100" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
204 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
205 => OP_MOVE_16 & "10100" & "000000000000000000000000010010", -- file: ./example_4_fft.py line: 67
206 => OP_MOVE_16 & "10101" & "000000000000000000000000001100", -- file: ./example_4_fft.py line: 69
207 => OP_MUL_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
208 => OP_IMM_16 & "10101" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
209 => OP_SR_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
210 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
211 => OP_MOVE_16 & "00011" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
212 => OP_MOVE_16 & "10011" & "000000000000000000000000010001", -- file: ./example_4_fft.py line: 66
213 => OP_MOVE_16 & "10100" & "000000000000000000000000001100", -- file: ./example_4_fft.py line: 69
214 => OP_MUL_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
215 => OP_IMM_16 & "10100" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
216 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
217 => OP_MOVE_16 & "10100" & "000000000000000000000000010010", -- file: ./example_4_fft.py line: 67
218 => OP_MOVE_16 & "10101" & "000000000000000000000000001011", -- file: ./example_4_fft.py line: 68
219 => OP_MUL_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
220 => OP_IMM_16 & "10101" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
221 => OP_SR_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
222 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
223 => OP_MOVE_16 & "00101" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
224 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
225 => OP_WRITE_4_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
226 => OP_READ_5_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
227 => OP_MOVE_16 & "10011" & "000000000000000000000000000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
228 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
229 => OP_JMP_16 & "00000" & "000000000000000000000011100110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
230 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
231 => OP_MOVE_16 & "10001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
232 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
233 => OP_WRITE_8_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
234 => OP_READ_9_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
235 => OP_MOVE_16 & "10011" & "000000000000000000000000000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
236 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
237 => OP_JMP_16 & "00000" & "000000000000000000000011101110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
238 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
239 => OP_MOVE_16 & "10010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
240 => OP_MOVE_16 & "10011" & "000000000000000000000000010000", -- file: ./example_4_fft.py line: 57
241 => OP_WRITE_2_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
242 => OP_MOVE_16 & "10011" & "000000000000000000000000010001", -- file: ./example_4_fft.py line: 66
243 => OP_MOVE_16 & "10100" & "000000000000000000000000000011", -- file: ./example_4_fft.py line: 64
244 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
245 => OP_WRITE_3_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
246 => OP_MOVE_16 & "10011" & "000000000000000000000000010000", -- file: ./example_4_fft.py line: 57
247 => OP_WRITE_6_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
248 => OP_MOVE_16 & "10011" & "000000000000000000000000010010", -- file: ./example_4_fft.py line: 67
249 => OP_MOVE_16 & "10100" & "000000000000000000000000000101", -- file: ./example_4_fft.py line: 65
250 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
251 => OP_WRITE_7_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
252 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
253 => OP_WRITE_2_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
254 => OP_MOVE_16 & "10011" & "000000000000000000000000010001", -- file: ./example_4_fft.py line: 66
255 => OP_MOVE_16 & "10100" & "000000000000000000000000000011", -- file: ./example_4_fft.py line: 64
256 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
257 => OP_WRITE_3_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
258 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
259 => OP_WRITE_6_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
260 => OP_MOVE_16 & "10011" & "000000000000000000000000010010", -- file: ./example_4_fft.py line: 67
261 => OP_MOVE_16 & "10100" & "000000000000000000000000000101", -- file: ./example_4_fft.py line: 65
262 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
263 => OP_WRITE_7_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
264 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
265 => OP_MOVE_16 & "10100" & "000000000000000000000000001001", -- file: ./example_4_fft.py line: 62
266 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
267 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
268 => OP_JMP_16 & "00000" & "000000000000000000000010101100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
269 => OP_MOVE_16 & "10011" & "000000000000000000000000001011", -- file: ./example_4_fft.py line: 68
270 => OP_MOVE_16 & "00011" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
271 => OP_MOVE_16 & "10011" & "000000000000000000000000000011", -- file: ./example_4_fft.py line: 64
272 => OP_MOVE_16 & "10100" & "000000000000000000000000001101", -- file: ./example_4_fft.py line: 70
273 => OP_MUL_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
274 => OP_IMM_16 & "10100" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
275 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
276 => OP_MOVE_16 & "10100" & "000000000000000000000000001100", -- file: ./example_4_fft.py line: 69
277 => OP_MOVE_16 & "10101" & "000000000000000000000000001110", -- file: ./example_4_fft.py line: 71
278 => OP_MUL_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
279 => OP_IMM_16 & "10101" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
280 => OP_SR_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
281 => OP_SUB_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 125
282 => OP_MOVE_16 & "01011" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
283 => OP_MOVE_16 & "10011" & "000000000000000000000000000011", -- file: ./example_4_fft.py line: 64
284 => OP_MOVE_16 & "10100" & "000000000000000000000000001110", -- file: ./example_4_fft.py line: 71
285 => OP_MUL_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
286 => OP_IMM_16 & "10100" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
287 => OP_SR_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
288 => OP_MOVE_16 & "10100" & "000000000000000000000000001100", -- file: ./example_4_fft.py line: 69
289 => OP_MOVE_16 & "10101" & "000000000000000000000000001101", -- file: ./example_4_fft.py line: 70
290 => OP_MUL_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 126
291 => OP_IMM_16 & "10101" & "000000000000000000000000001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
292 => OP_SR_16 & "10100" & "000000000000000000000000010101", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 132
293 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
294 => OP_MOVE_16 & "01100" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
295 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
296 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
297 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
298 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
299 => OP_JMP_16 & "00000" & "000000000000000000000010011110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
300 => OP_MOVE_16 & "10011" & "000000000000000000000000001000", -- file: ./example_4_fft.py line: 60
301 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
302 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
303 => OP_MOVE_16 & "01000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
304 => OP_JMP_16 & "00000" & "000000000000000000000010000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
305 => OP_IMM_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
306 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
307 => OP_IMM_16 & "10011" & "000000000000000000000010000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
308 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
309 => OP_GT_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 138
310 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
311 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
312 => OP_JMPF_16 & "10011" & "000000000000000000000100111011", -- file: None line: None
313 => OP_JMP_16 & "00000" & "000000000000000000000101001010", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
314 => OP_JMP_16 & "00000" & "000000000000000000000100111011", -- file: None line: None
315 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
316 => OP_WRITE_4_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
317 => OP_READ_5_16 & "00100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
318 => OP_MOVE_16 & "10011" & "000000000000000000000000000100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
319 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
320 => OP_JMP_16 & "00000" & "000000000000000000000101000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
321 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
322 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
323 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
324 => OP_WRITE_14_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
325 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
326 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
327 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
328 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
329 => OP_JMP_16 & "00000" & "000000000000000000000100110011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
330 => OP_IMM_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
331 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
332 => OP_IMM_16 & "10011" & "000000000000000000000010000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
333 => OP_MOVE_16 & "10100" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
334 => OP_GT_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 138
335 => OP_IMM_16 & "10100" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
336 => OP_EQ_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 134
337 => OP_JMPF_16 & "10011" & "000000000000000000000101010100", -- file: None line: None
338 => OP_JMP_16 & "00000" & "000000000000000000000101100011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 62
339 => OP_JMP_16 & "00000" & "000000000000000000000101010100", -- file: None line: None
340 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
341 => OP_WRITE_8_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
342 => OP_READ_9_16 & "00110" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 175
343 => OP_MOVE_16 & "10011" & "000000000000000000000000000110", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 188
344 => OP_MOVE_16 & "00000" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
345 => OP_JMP_16 & "00000" & "000000000000000000000101011010", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
346 => OP_MOVE_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 199
347 => OP_MOVE_16 & "00010" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
348 => OP_MOVE_16 & "10011" & "000000000000000000000000000010", -- file: ./example_4_fft.py line: 58
349 => OP_WRITE_15_16 & "10011" & "000000000000000000000000000000", -- file: /usr/local/lib/python2.6/dist-packages/chips/streams.py line: 484
350 => OP_MOVE_16 & "10011" & "000000000000000000000000000001", -- file: ./example_4_fft.py line: 56
351 => OP_IMM_16 & "10100" & "000000000000000000000000000001", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 119
352 => OP_ADD_16 & "10011" & "000000000000000000000000010100", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 124
353 => OP_MOVE_16 & "00001" & "000000000000000000000000010011", -- file: /usr/local/lib/python2.6/dist-packages/chips/instruction.py line: 274
354 => OP_JMP_16 & "00000" & "000000000000000000000101001100", -- file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py line: 63
355 => OP_JMP_16 & "00000" & "000000000000000000000101100011", -- file: None line: None
356 => OP_JMP_16 & "00000" & "000000000000000000000000000000"); -- file: None line: None
  signal MOD_DIV_16      : std_logic;

begin

  process
  begin
    wait until rising_edge(CLK);
    TIMER_1us <= '0';
    TIMER_10us <= '0';
    TIMER_100us <= '0';
    TIMER_1ms <= '0';
    if TIMER_1us_COUNT = 0 then
       TIMER_1us_COUNT <= TIMER_1us_MAX;
       TIMER_1us <= '1';
       if TIMER_10us_COUNT = 0 then
         TIMER_10us_COUNT <= TIMER_10us_MAX;
         TIMER_10us <= '1';
         if TIMER_100us_COUNT = 0 then
           TIMER_100us_COUNT <= TIMER_100us_MAX;
           TIMER_100us <= '1';
           if TIMER_1ms_COUNT = 0 then
             TIMER_1ms_COUNT <= TIMER_1ms_MAX;
             TIMER_1ms <= '1';
           else
             TIMER_1ms_COUNT <= TIMER_1ms_COUNT - 1;
           end if;
         else
           TIMER_100us_COUNT <= TIMER_100us_COUNT - 1;
         end if;
       else
         TIMER_10us_COUNT <= TIMER_10us_COUNT - 1;
       end if;
    else
       TIMER_1us_COUNT <= TIMER_1us_COUNT - 1;
    end if;
    if RST = '1' then
       TIMER_1us_COUNT <= TIMER_1us_MAX;
       TIMER_1us <= '0';
       TIMER_10us_COUNT <= TIMER_10us_MAX;
       TIMER_10us <= '0';
       TIMER_100us_COUNT <= TIMER_100us_MAX;
       TIMER_100us <= '0';
       TIMER_1ms_COUNT <= TIMER_1ms_MAX;
       TIMER_1ms <= '0';
    end if;
  end process;

  --internal clock generator
  process
  begin
    while True loop
      CLK <= '0';
      wait for 5 ns;
      CLK <= '1';
      wait for 5 ns;
    end loop;
    wait;
  end process;

  --internal reset generator
  process
  begin
    RST <= '1';
    wait for 20 ns;
    RST <= '0';
    wait;
  end process;

  --file: ./example_4_fft.py, line: 236
  --OutPort(14, 30)
  process
    file OUTFILE : text open write_mode is "resp_14.txt";
    variable OUTLINE : LINE;
    variable VALUE : integer;
  begin
    wait until rising_edge(CLK);
    STREAM_14_ACK <= '0';
    if STREAM_14_STB = '1' then
      STREAM_14_ACK <= '1';
    end if;    if STREAM_14_STB = '1' and STREAM_14_ACK = '1' then
      VALUE := to_integer(signed(STREAM_14));
      write(OUTLINE, VALUE);
      writeline(OUTFILE, OUTLINE);
    end if;  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 1 Lookup()
  process
  begin
    wait until rising_edge(CLK);
    case STATE_1 is
      when UNARY_INPUT =>
        if STREAM_0_STB = '1' then
          STREAM_0_ACK <= '1';
          STREAM_1_STB <= '1';
          STREAM_1 <= LOOKUP_1(to_integer(unsigned(STREAM_0)));
          STATE_1 <= UNARY_OUTPUT;
        end if;
      when UNARY_OUTPUT =>
        STREAM_0_ACK <= '0';
        if STREAM_1_ACK = '1' then
           STREAM_1_STB <= '0';
           STATE_1 <= UNARY_INPUT;
        end if;
     end case;
     if RST = '1' then
       STREAM_1_STB <= '0';
       STREAM_0_ACK <= '0';
       STATE_1 <= UNARY_INPUT;
     end if;
  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 0 Counter(0, 255, 1, 9)
  process
  begin
    wait until rising_edge(CLK);
    STREAM_0_STB <= '1';
    if STREAM_0_ACK = '1' then
      STREAM_0_STB <= '0';
      STREAM_0 <= STD_RESIZE(ADD(STREAM_0, "000000001"), 9);
      if STREAM_0 = "011111111" then
        STREAM_0 <= "000000000";
      end if;
    end if;
    if RST = '1' then
      STREAM_0_STB <= '0';
      STREAM_0 <= "000000000";
    end if;
  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 189
  --STREAM 5 Array()
    RAMARRAY_5 : RAMARRAY generic map(
      DEPTH => 128,
      WIDTH => 30
    )
    port map(
      CLK             => CLK,
      RST             => RST,
      ADDRESS_IN      => STREAM_2,
      ADDRESS_IN_STB  => STREAM_2_STB,
      ADDRESS_IN_ACK  => STREAM_2_ACK,
      DATA_IN         => STREAM_3,
      DATA_IN_STB     => STREAM_3_STB,
      DATA_IN_ACK     => STREAM_3_ACK,
      ADDRESS_OUT     => STREAM_4,
      ADDRESS_OUT_STB => STREAM_4_STB,
      ADDRESS_OUT_ACK => STREAM_4_ACK,
      DATA_OUT        => STREAM_5,
      DATA_OUT_STB    => STREAM_5_STB,
      DATA_OUT_ACK    => STREAM_5_ACK
    );

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 189
  --STREAM 9 Array()
    RAMARRAY_9 : RAMARRAY generic map(
      DEPTH => 128,
      WIDTH => 30
    )
    port map(
      CLK             => CLK,
      RST             => RST,
      ADDRESS_IN      => STREAM_6,
      ADDRESS_IN_STB  => STREAM_6_STB,
      ADDRESS_IN_ACK  => STREAM_6_ACK,
      DATA_IN         => STREAM_7,
      DATA_IN_STB     => STREAM_7_STB,
      DATA_IN_ACK     => STREAM_7_ACK,
      ADDRESS_OUT     => STREAM_8,
      ADDRESS_OUT_STB => STREAM_8_STB,
      ADDRESS_OUT_ACK => STREAM_8_ACK,
      DATA_OUT        => STREAM_9,
      DATA_OUT_STB    => STREAM_9_STB,
      DATA_OUT_ACK    => STREAM_9_ACK
    );

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 11 Lookup()
  process
  begin
    wait until rising_edge(CLK);
    case STATE_11 is
      when UNARY_INPUT =>
        if STREAM_10_STB = '1' then
          STREAM_10_ACK <= '1';
          STREAM_11_STB <= '1';
          STREAM_11 <= LOOKUP_11(to_integer(unsigned(STREAM_10)));
          STATE_11 <= UNARY_OUTPUT;
        end if;
      when UNARY_OUTPUT =>
        STREAM_10_ACK <= '0';
        if STREAM_11_ACK = '1' then
           STREAM_11_STB <= '0';
           STATE_11 <= UNARY_INPUT;
        end if;
     end case;
     if RST = '1' then
       STREAM_11_STB <= '0';
       STREAM_10_ACK <= '0';
       STATE_11 <= UNARY_INPUT;
     end if;
  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 10 Counter(0, 6, 1, 4)
  process
  begin
    wait until rising_edge(CLK);
    STREAM_10_STB <= '1';
    if STREAM_10_ACK = '1' then
      STREAM_10_STB <= '0';
      STREAM_10 <= STD_RESIZE(ADD(STREAM_10, "0001"), 4);
      if STREAM_10 = "0110" then
        STREAM_10 <= "0000";
      end if;
    end if;
    if RST = '1' then
      STREAM_10_STB <= '0';
      STREAM_10 <= "0000";
    end if;
  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 13 Lookup()
  process
  begin
    wait until rising_edge(CLK);
    case STATE_13 is
      when UNARY_INPUT =>
        if STREAM_12_STB = '1' then
          STREAM_12_ACK <= '1';
          STREAM_13_STB <= '1';
          STREAM_13 <= LOOKUP_13(to_integer(unsigned(STREAM_12)));
          STATE_13 <= UNARY_OUTPUT;
        end if;
      when UNARY_OUTPUT =>
        STREAM_12_ACK <= '0';
        if STREAM_13_ACK = '1' then
           STREAM_13_STB <= '0';
           STATE_13 <= UNARY_INPUT;
        end if;
     end case;
     if RST = '1' then
       STREAM_13_STB <= '0';
       STREAM_12_ACK <= '0';
       STATE_13 <= UNARY_INPUT;
     end if;
  end process;

  --file: /usr/local/lib/python2.6/dist-packages/chips/__init__.py, line: 58
  --STREAM 12 Counter(0, 6, 1, 4)
  process
  begin
    wait until rising_edge(CLK);
    STREAM_12_STB <= '1';
    if STREAM_12_ACK = '1' then
      STREAM_12_STB <= '0';
      STREAM_12 <= STD_RESIZE(ADD(STREAM_12, "0001"), 4);
      if STREAM_12 = "0110" then
        STREAM_12 <= "0000";
      end if;
    end if;
    if RST = '1' then
      STREAM_12_STB <= '0';
      STREAM_12 <= "0000";
    end if;
  end process;

  --file: ./example_4_fft.py, line: 237
  --OutPort(15, 30)
  process
    file OUTFILE : text open write_mode is "resp_15.txt";
    variable OUTLINE : LINE;
    variable VALUE : integer;
  begin
    wait until rising_edge(CLK);
    STREAM_15_ACK <= '0';
    if STREAM_15_STB = '1' then
      STREAM_15_ACK <= '1';
    end if;    if STREAM_15_STB = '1' and STREAM_15_ACK = '1' then
      VALUE := to_integer(signed(STREAM_15));
      write(OUTLINE, VALUE);
      writeline(OUTFILE, OUTLINE);
    end if;  end process;

  -- process
  process
    variable INSTRUCTION : std_logic_vector(39 downto 0);
  begin
    wait until rising_edge(CLK);
    INSTRUCTION := INSTRUCTIONS_16(to_integer(PC_16));
    OPERATION_16 <= INSTRUCTION(39 downto 35);
    SRCA_16      <= INSTRUCTION(34 downto 30);
    SRCB_16      <= INSTRUCTION(4 downto 0);
    IMMEDIATE_16 <= INSTRUCTION(29 downto 0);
  end process;

  process
    variable REGA         : std_logic_vector(29 downto 0);
    variable REGB         : std_logic_vector(29 downto 0);
    variable DEST         : std_logic_vector(4 downto 0);
    variable RESULT       : std_logic_vector(29 downto 0);
    variable RESULT_DEL   : std_logic_vector(29 downto 0);
    variable REGISTERS_EN : std_logic;
    variable MODULO       : unsigned(29 downto 0);
    variable FLAG_EQ      : std_logic;
    variable FLAG_GT      : std_logic;
    variable FLAG_GE      : std_logic;
  begin
    wait until rising_edge(CLK);
    REGISTERS_EN := '0';
    case STATE_16 is
      when STALL =>
        PC_16 <= PC_16 + 1;
        STATE_16 <= EXECUTE;
      when EXECUTE =>
        REGA := REGISTERS_16(to_integer(unsigned(SRCA_16)));
        REGB := REGISTERS_16(to_integer(unsigned(SRCB_16)));
        DEST := SRCA_16;
        RESULT := REGA;
        PC_16 <= PC_16 + 1;

        --share comparator logic
        if REGA = REGB then
          FLAG_EQ := '1';
        else
          FLAG_EQ := '0';
        end if;

        if signed(REGA) > signed(REGB) then
          FLAG_GT := '1';
        else
          FLAG_GT := '0';
        end if;

        FLAG_GE := FLAG_GT or FLAG_EQ;

        --execute instructions
        case OPERATION_16 is
          when OP_MOVE_16 => 
            RESULT := REGB;
            REGISTERS_EN := '1';
          when OP_MUL_16  => 
            RESULT := STD_RESIZE( MUL(REGA, REGB), 30);
            REGISTERS_EN := '1';
          when OP_ADD_16  => 
            RESULT := STD_RESIZE( ADD(REGA, REGB), 30);
            REGISTERS_EN := '1';
          when OP_SUB_16  => 
            RESULT := STD_RESIZE( SUB(REGA, REGB), 30);
            REGISTERS_EN := '1';
          when OP_SL_16   => 
            RESULT := STD_RESIZE(  SL(REGA, REGB), 30);
            REGISTERS_EN := '1';
          when OP_SR_16   => 
            RESULT := STD_RESIZE(  SR(REGA, REGB), 30);
            REGISTERS_EN := '1';
          when OP_EQ_16   => 
            RESULT := (others => FLAG_EQ);
            REGISTERS_EN := '1';
          when OP_GT_16   => 
            RESULT := (others => FLAG_GT);
            REGISTERS_EN := '1';
          when OP_GE_16   => 
            RESULT := (others => FLAG_GE);
            REGISTERS_EN := '1';
          when OP_IMM_16  => 
            RESULT := IMMEDIATE_16;
            REGISTERS_EN := '1';
          when OP_JMP_16 =>
            STATE_16 <= STALL;
            PC_16 <= resize(unsigned(IMMEDIATE_16), 9);
          when OP_JMPF_16 =>
            if RESULT_DEL = "000000000000000000000000000000" then
              STATE_16 <= STALL;
              PC_16 <= resize(unsigned(IMMEDIATE_16), 9);
            end if;

          when OP_WRITE_2_16 =>
            STATE_16 <= WRITE_STREAM_2;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_3_16 =>
            STATE_16 <= WRITE_STREAM_3;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_6_16 =>
            STATE_16 <= WRITE_STREAM_6;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_7_16 =>
            STATE_16 <= WRITE_STREAM_7;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_4_16 =>
            STATE_16 <= WRITE_STREAM_4;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_8_16 =>
            STATE_16 <= WRITE_STREAM_8;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_14_16 =>
            STATE_16 <= WRITE_STREAM_14;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_WRITE_15_16 =>
            STATE_16 <= WRITE_STREAM_15;
            DEST := SRCA_16;
            PC_16 <= PC_16;
          when OP_READ_1_16 =>
            STATE_16 <= READ_STREAM_1;
            PC_16 <= PC_16;
          when OP_READ_5_16 =>
            STATE_16 <= READ_STREAM_5;
            PC_16 <= PC_16;
          when OP_READ_9_16 =>
            STATE_16 <= READ_STREAM_9;
            PC_16 <= PC_16;
          when OP_READ_11_16 =>
            STATE_16 <= READ_STREAM_11;
            PC_16 <= PC_16;
          when OP_READ_13_16 =>
            STATE_16 <= READ_STREAM_13;
            PC_16 <= PC_16;
          when others => null;
        end case;

        --write back results
        RESULT_DEL := RESULT;

      when READ_STREAM_1 =>
        if STREAM_1_STB = '1' then
          STREAM_1_ACK <= '1';
          REGISTERS_EN := '1';
          RESULT := STD_RESIZE(STREAM_1, 30);
          STATE_16 <= ACK_STREAM_1;
        end if;
      when ACK_STREAM_1 =>
        STREAM_1_ACK <= '0';
        STATE_16 <= EXECUTE;
        PC_16 <= PC_16 + 1;
      when READ_STREAM_5 =>
        if STREAM_5_STB = '1' then
          STREAM_5_ACK <= '1';
          REGISTERS_EN := '1';
          RESULT := STD_RESIZE(STREAM_5, 30);
          STATE_16 <= ACK_STREAM_5;
        end if;
      when ACK_STREAM_5 =>
        STREAM_5_ACK <= '0';
        STATE_16 <= EXECUTE;
        PC_16 <= PC_16 + 1;
      when READ_STREAM_9 =>
        if STREAM_9_STB = '1' then
          STREAM_9_ACK <= '1';
          REGISTERS_EN := '1';
          RESULT := STD_RESIZE(STREAM_9, 30);
          STATE_16 <= ACK_STREAM_9;
        end if;
      when ACK_STREAM_9 =>
        STREAM_9_ACK <= '0';
        STATE_16 <= EXECUTE;
        PC_16 <= PC_16 + 1;
      when READ_STREAM_11 =>
        if STREAM_11_STB = '1' then
          STREAM_11_ACK <= '1';
          REGISTERS_EN := '1';
          RESULT := STD_RESIZE(STREAM_11, 30);
          STATE_16 <= ACK_STREAM_11;
        end if;
      when ACK_STREAM_11 =>
        STREAM_11_ACK <= '0';
        STATE_16 <= EXECUTE;
        PC_16 <= PC_16 + 1;
      when READ_STREAM_13 =>
        if STREAM_13_STB = '1' then
          STREAM_13_ACK <= '1';
          REGISTERS_EN := '1';
          RESULT := STD_RESIZE(STREAM_13, 30);
          STATE_16 <= ACK_STREAM_13;
        end if;
      when ACK_STREAM_13 =>
        STREAM_13_ACK <= '0';
        STATE_16 <= EXECUTE;
        PC_16 <= PC_16 + 1;
      when WRITE_STREAM_2 =>
        STREAM_2_STB <= '1';
        STREAM_2 <= STD_RESIZE(REGA, 30);
        if STREAM_2_ACK = '1' then
          STREAM_2_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_3 =>
        STREAM_3_STB <= '1';
        STREAM_3 <= STD_RESIZE(REGA, 30);
        if STREAM_3_ACK = '1' then
          STREAM_3_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_6 =>
        STREAM_6_STB <= '1';
        STREAM_6 <= STD_RESIZE(REGA, 30);
        if STREAM_6_ACK = '1' then
          STREAM_6_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_7 =>
        STREAM_7_STB <= '1';
        STREAM_7 <= STD_RESIZE(REGA, 30);
        if STREAM_7_ACK = '1' then
          STREAM_7_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_4 =>
        STREAM_4_STB <= '1';
        STREAM_4 <= STD_RESIZE(REGA, 30);
        if STREAM_4_ACK = '1' then
          STREAM_4_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_8 =>
        STREAM_8_STB <= '1';
        STREAM_8 <= STD_RESIZE(REGA, 30);
        if STREAM_8_ACK = '1' then
          STREAM_8_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_14 =>
        STREAM_14_STB <= '1';
        STREAM_14 <= STD_RESIZE(REGA, 30);
        if STREAM_14_ACK = '1' then
          STREAM_14_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
      when WRITE_STREAM_15 =>
        STREAM_15_STB <= '1';
        STREAM_15 <= STD_RESIZE(REGA, 30);
        if STREAM_15_ACK = '1' then
          STREAM_15_STB <= '0';
          STATE_16 <= EXECUTE;
          PC_16 <= PC_16 + 1;
        end if;
    end case;

    if RST = '1' then
      STATE_16 <= STALL;
      PC_16 <= "000000000";
      STREAM_1_ACK <= '0';
      STREAM_5_ACK <= '0';
      STREAM_9_ACK <= '0';
      STREAM_11_ACK <= '0';
      STREAM_13_ACK <= '0';
      STREAM_2_STB <= '0';
      STREAM_3_STB <= '0';
      STREAM_6_STB <= '0';
      STREAM_7_STB <= '0';
      STREAM_4_STB <= '0';
      STREAM_8_STB <= '0';
      STREAM_14_STB <= '0';
      STREAM_15_STB <= '0';
    end if;
    if REGISTERS_EN = '1' then
      REGISTERS_16(to_integer(unsigned(DEST))) <= RESULT;
    end if;
  end process;



end architecture RTL;

--+============================================================================+
--|                       **END OF AUTO GENERATED CODE**                       |
--+============================================================================+